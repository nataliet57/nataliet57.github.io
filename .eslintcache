[{"/Users/natalietam/Documents/GitHub/nataliet57.github.io/src/App.js":"1","/Users/natalietam/Documents/GitHub/nataliet57.github.io/src/styles.js":"2","/Users/natalietam/Documents/GitHub/nataliet57.github.io/src/infoCard.jsx":"3","/Users/natalietam/Documents/GitHub/nataliet57.github.io/src/resources/string.js":"4","/Users/natalietam/Documents/GitHub/nataliet57.github.io/src/projects.js":"5","/Users/natalietam/Documents/GitHub/nataliet57.github.io/src/index.js":"6","/Users/natalietam/Documents/GitHub/nataliet57.github.io/src/Footer.js":"7"},{"size":6531,"mtime":1619150843683,"results":"8","hashOfConfig":"9"},{"size":2793,"mtime":1619148296529,"results":"10","hashOfConfig":"9"},{"size":948,"mtime":1618884164588,"results":"11","hashOfConfig":"9"},{"size":3988,"mtime":1619139415823,"results":"12","hashOfConfig":"9"},{"size":3164,"mtime":1619148308536,"results":"13","hashOfConfig":"9"},{"size":219,"mtime":1618887478135,"results":"14","hashOfConfig":"9"},{"size":855,"mtime":1619150919940,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1dwpgk9",{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/natalietam/Documents/GitHub/nataliet57.github.io/src/App.js",["31","32","33","34","35"],"/Users/natalietam/Documents/GitHub/nataliet57.github.io/src/styles.js",["36"],"/Users/natalietam/Documents/GitHub/nataliet57.github.io/src/infoCard.jsx",["37"],"\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Card, Row } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst Tools = styled.div`\n  border-radius: 15px;\n  padding: 0px 10px 0px 10px;\n  margin: 5px 0px 5px 10px;\n  background-color: ${(props) => props.color};\n  margin-right: 25px;\n`;\n\nconst Icons = styled(FontAwesomeIcon)`\n  color: white;\n  display: inline-block;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst ToolsText = styled.p`\n  color: white;\n  display: inline-block;\n  height: 50%;\n  margin: 0px 3px 4px 5px;\n  font-size: 12px;\n`;\n\n\nexport default class InfoCard extends React.Component {\n  render() {\n    const { color, icon, name } = this.props\n    return (\n      <div>\n          <Row>\n            <Tools color={color}>\n              <Icons icon={icon} size=\"sm\" />\n              <ToolsText>{name}</ToolsText>\n            </Tools>\n          </Row>\n      </div>\n    );\n  }\n}","/Users/natalietam/Documents/GitHub/nataliet57.github.io/src/resources/string.js",[],"/Users/natalietam/Documents/GitHub/nataliet57.github.io/src/projects.js",["38","39"],"/Users/natalietam/Documents/GitHub/nataliet57.github.io/src/index.js",[],"/Users/natalietam/Documents/GitHub/nataliet57.github.io/src/Footer.js",["40","41","42"],{"ruleId":"43","severity":1,"message":"44","line":82,"column":43,"nodeType":"45","endLine":82,"endColumn":86},{"ruleId":"46","severity":1,"message":"47","line":102,"column":26,"nodeType":"45","endLine":102,"endColumn":47},{"ruleId":"46","severity":1,"message":"47","line":103,"column":26,"nodeType":"45","endLine":103,"endColumn":47},{"ruleId":"46","severity":1,"message":"47","line":104,"column":26,"nodeType":"45","endLine":104,"endColumn":44},{"ruleId":"46","severity":1,"message":"47","line":105,"column":26,"nodeType":"45","endLine":105,"endColumn":43},{"ruleId":"48","severity":1,"message":"49","line":85,"column":7,"nodeType":"50","messageId":"51","endLine":85,"endColumn":13},{"ruleId":"48","severity":1,"message":"52","line":4,"column":10,"nodeType":"50","messageId":"51","endLine":4,"endColumn":14},{"ruleId":"48","severity":1,"message":"53","line":2,"column":62,"nodeType":"50","messageId":"51","endLine":2,"endColumn":73},{"ruleId":"46","severity":1,"message":"47","line":69,"column":15,"nodeType":"45","endLine":69,"endColumn":40},{"ruleId":"48","severity":1,"message":"54","line":8,"column":7,"nodeType":"50","messageId":"51","endLine":8,"endColumn":12},{"ruleId":"48","severity":1,"message":"55","line":13,"column":7,"nodeType":"50","messageId":"51","endLine":13,"endColumn":20},{"ruleId":"46","severity":1,"message":"47","line":31,"column":11,"nodeType":"45","endLine":31,"endColumn":36},"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-unused-vars","'Button' is assigned a value but never used.","Identifier","unusedVar","'Card' is defined but never used.","'faTeamspeak' is defined but never used.","'Icons' is assigned a value but never used.","'CopyRightText' is assigned a value but never used."]